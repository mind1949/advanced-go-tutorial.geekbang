syntax = "proto3";

package api.v1;

import "google/api/annotations.proto";
import "google/protobuf/empty.proto";
import "google/protobuf/timestamp.proto";
import "google/protobuf/field_mask.proto";

option go_package = "Blog/api/v1;v1";
option java_multiple_files = true;
option java_package = "api.v1";

service Blog {
    rpc CreateArticle (CreateArticleRequest) returns (Article) {
        option (google.api.http) = {
            post: "v1/articles"
            body: "*"
        };
    };
    rpc UpdateArticle (UpdateArticleRequest) returns (Article) {
        option (google.api.http) = {
            patch: "v1/{name=articles/*}"
            body: "article"
        };
    };
    rpc DeleteArticle (DeleteArticleRequest) returns (google.protobuf.Empty) {
        option (google.api.http) = {
            delete: "/v1/{name=articles/*/}"
        };
    };
    rpc GetArticle (GetArticleRequest) returns (Article) {
        option (google.api.http) = {
            get: "v1/{name=articles/*"
        };
    };
    rpc ListArticle (ListArticleRequest) returns (ListArticleReply) {
        option (google.api.http) = {
            get: "v1/articles"
        };
    };
}

message Article {
    int64 id = 1;
    string title = 2;
    string content = 3;
    google.protobuf.Timestamp created_time = 4;
    google.protobuf.Timestamp updated_time = 5;
}

message CreateArticleRequest {
    string title = 1;
    string content = 2;
}

message UpdateArticleRequest {
    Article article = 1;
    google.protobuf.FieldMask update_mask = 2;
}

message DeleteArticleRequest {
    string name = 1;
}

message GetArticleRequest {
    string name = 1;
}

message ListArticleRequest {
    // The maximum number of items to return. Must be a value between 1 and 1000.
    // If not set, defaults to 50.
    int32 page_size = 2;

    // The next_page_token value returned from a previous list request, if any. If
    // not set, defaults to an empty string.
    string page_token = 3;
}

message ListArticleReply {
    repeated Article results = 1;
}